<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="30" failures="0" errors="0" time="15.509">
  <testsuite name="POST /newsletter/signup" errors="0" failures="0" skipped="0" timestamp="2023-06-23T05:03:19" time="10.758" tests="4">
    <testcase classname="POST /newsletter/signup Good request should register a new user" name="POST /newsletter/signup Good request should register a new user" time="0.086">
    </testcase>
    <testcase classname="POST /newsletter/signup Wrong request should handle duplicate email error" name="POST /newsletter/signup Wrong request should handle duplicate email error" time="0.031">
    </testcase>
    <testcase classname="POST /newsletter/signup Wrong request should handle server errors" name="POST /newsletter/signup Wrong request should handle server errors" time="0.021">
    </testcase>
    <testcase classname="POST /newsletter/signup Wrong request should validate email" name="POST /newsletter/signup Wrong request should validate email" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="PUT /newsletter/unsubscribe/:id" errors="0" failures="0" skipped="0" timestamp="2023-06-23T05:03:19" time="10.963" tests="3">
    <testcase classname="PUT /newsletter/unsubscribe/:id Good request should update user active status successfully" name="PUT /newsletter/unsubscribe/:id Good request should update user active status successfully" time="0.15">
    </testcase>
    <testcase classname="PUT /newsletter/unsubscribe/:id Wrong request should respond with 400 if active value is missing or not a boolean" name="PUT /newsletter/unsubscribe/:id Wrong request should respond with 400 if active value is missing or not a boolean" time="0.041">
    </testcase>
    <testcase classname="PUT /newsletter/unsubscribe/:id Wrong request should respond with 500 if something goes wrong in the database" name="PUT /newsletter/unsubscribe/:id Wrong request should respond with 500 if something goes wrong in the database" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="DELETE /newsletter/delete/:id" errors="0" failures="0" skipped="0" timestamp="2023-06-23T05:03:30" time="1.054" tests="3">
    <testcase classname="DELETE /newsletter/delete/:id Good request should delete the user successfully" name="DELETE /newsletter/delete/:id Good request should delete the user successfully" time="0.033">
    </testcase>
    <testcase classname="DELETE /newsletter/delete/:id Wrong request should respond with 404 if the user is not found" name="DELETE /newsletter/delete/:id Wrong request should respond with 404 if the user is not found" time="0.025">
    </testcase>
    <testcase classname="DELETE /newsletter/delete/:id Wrong request should respond with 500 if something goes wrong in the database" name="DELETE /newsletter/delete/:id Wrong request should respond with 500 if something goes wrong in the database" time="0.027">
    </testcase>
  </testsuite>
  <testsuite name="GET /" errors="0" failures="0" skipped="0" timestamp="2023-06-23T05:03:31" time="0.787" tests="4">
    <testcase classname="GET / good request should return users based on the query string" name="GET / good request should return users based on the query string" time="0.041">
    </testcase>
    <testcase classname="GET / good request should return empty array if no users match the query string" name="GET / good request should return empty array if no users match the query string" time="0.015">
    </testcase>
    <testcase classname="GET / bad request should handle server errors" name="GET / bad request should handle server errors" time="0.011">
    </testcase>
    <testcase classname="GET / bad request should return 400 if query string is missing" name="GET / bad request should return 400 if query string is missing" time="0.043">
    </testcase>
  </testsuite>
  <testsuite name="GET /newsletter/registered" errors="0" failures="0" skipped="0" timestamp="2023-06-23T05:03:30" time="2.48" tests="13">
    <testcase classname="GET /newsletter/registered Good request should return all registered users" name="GET /newsletter/registered Good request should return all registered users" time="0.063">
    </testcase>
    <testcase classname="GET /newsletter/registered Good request should return registered users based on the active parameter" name="GET /newsletter/registered Good request should return registered users based on the active parameter" time="0.044">
    </testcase>
    <testcase classname="GET /newsletter/registered Good request should list registered users sorted by idAsc" name="GET /newsletter/registered Good request should list registered users sorted by idAsc" time="0.014">
    </testcase>
    <testcase classname="GET /newsletter/registered Good request should list registered users sorted by idDesc" name="GET /newsletter/registered Good request should list registered users sorted by idDesc" time="0.013">
    </testcase>
    <testcase classname="GET /newsletter/registered Good request should list registered users sorted by emailAsc" name="GET /newsletter/registered Good request should list registered users sorted by emailAsc" time="0.031">
    </testcase>
    <testcase classname="GET /newsletter/registered Good request should list registered users sorted by emailDesc" name="GET /newsletter/registered Good request should list registered users sorted by emailDesc" time="0.021">
    </testcase>
    <testcase classname="GET /newsletter/registered Good request should list registered users sorted by createdAtAsc" name="GET /newsletter/registered Good request should list registered users sorted by createdAtAsc" time="0.016">
    </testcase>
    <testcase classname="GET /newsletter/registered Good request should list registered users sorted by createdAtDesc" name="GET /newsletter/registered Good request should list registered users sorted by createdAtDesc" time="0.03">
    </testcase>
    <testcase classname="GET /newsletter/registered Good request should list registered users sorted by updatedAtAsc" name="GET /newsletter/registered Good request should list registered users sorted by updatedAtAsc" time="0.012">
    </testcase>
    <testcase classname="GET /newsletter/registered Good request should list registered users sorted by updatedAtDesc" name="GET /newsletter/registered Good request should list registered users sorted by updatedAtDesc" time="0.014">
    </testcase>
    <testcase classname="GET /newsletter/registered Bad request should return an error if the active parameter is invalid" name="GET /newsletter/registered Bad request should return an error if the active parameter is invalid" time="0.011">
    </testcase>
    <testcase classname="GET /newsletter/registered Bad request should return an error if the sort parameter is invalid" name="GET /newsletter/registered Bad request should return an error if the sort parameter is invalid" time="0.025">
    </testcase>
    <testcase classname="GET /newsletter/registered Bad request should handle server errors" name="GET /newsletter/registered Bad request should handle server errors" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="PUT /newsletter/edit/:id" errors="0" failures="0" skipped="0" timestamp="2023-06-23T05:03:32" time="0.769" tests="3">
    <testcase classname="PUT /newsletter/edit/:id Good request should update user email successfully" name="PUT /newsletter/edit/:id Good request should update user email successfully" time="0.048">
    </testcase>
    <testcase classname="PUT /newsletter/edit/:id Wrong request should respond with 400 if email value is missing or not a string" name="PUT /newsletter/edit/:id Wrong request should respond with 400 if email value is missing or not a string" time="0.02">
    </testcase>
    <testcase classname="PUT /newsletter/edit/:id Wrong request should respond with 500 if something goes wrong in the database" name="PUT /newsletter/edit/:id Wrong request should respond with 500 if something goes wrong in the database" time="0.036">
    </testcase>
  </testsuite>
</testsuites>