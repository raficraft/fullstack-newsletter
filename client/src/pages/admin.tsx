import Head from 'next/head';
import type { InferGetServerSidePropsType, GetServerSideProps } from 'next';
import { useEffect, useState } from 'react';
import { Field } from '@components/molecules';
import { Button, Text } from '@components/atoms';
import { usePaginate } from '@hooks/index';
import styles from '@styles/pages/Admin.module.scss';
import { IconMagnify } from '@assets/svg/icons';

export default function Admin({
  newsLetters,
}: InferGetServerSidePropsType<typeof getServerSideProps>) {
  const { items, nextPage, prevPage, currentPage, totalPages } = usePaginate(
    newsLetters,
    10
  );

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <main className={styles.admin}>
        <Field
          type='search'
          className='input'
          placeholder='find a subscriber'
          name='search'
          svg={<IconMagnify />}
        />

        <details>
          <summary>Filtre</summary>
          <div>
            <p>Tous les filtres</p>
          </div>
        </details>
        <div>
          {items.map((item) => (
            <div key={item.id}>{item.email}</div>
          ))}
        </div>
        <div>
          <button onClick={prevPage} disabled={currentPage === 0}>
            Prev
          </button>
          <Text tag='p'>
            Page {currentPage + 1} / {totalPages}
          </Text>
          <button onClick={nextPage} disabled={currentPage === totalPages - 1}>
            Next
          </button>
        </div>
      </main>
    </>
  );
}

export async function loadNewsletter() {
  const url = process.env.NEXT_PUBLIC_API_URL;
  const res = await fetch(`${url}/newsletter/registered`);
  const newsLetter = await res.json();
  return newsLetter;
}

export const getServerSideProps: GetServerSideProps = async () => {
  const newsLetters = await loadNewsletter();
  return { props: { newsLetters } };
};
